fullnameOverride: kiali-operator
nodeSelector:
  team: devops
  service: devops-infra
  performance_type: standard
image:
  repo: quay.io/kiali/kiali-operator
cr:
  create: true
  namespace: observability
  spec:
    deployment:
      nodeSelector:
        team: devops
        service: devops-infra
        performance_type: standard
{% if certificate_arn is defined %}
      service_type: NodePort
{% else %}
      service_type: ClusterIP
{% endif %}
{% if server_host is defined %}
      ingress:
        enabled: true
        override_yaml:
          metadata:
            annotations:
{% if certificate_arn is defined %}
              kubernetes.io/ingress.class: alb
              alb.ingress.kubernetes.io/scheme: internal
              alb.ingress.kubernetes.io/certificate-arn: "{{ certificate_arn }}"
              alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
              alb.ingress.kubernetes.io/tags: "Team=devops,Server=etc,Service=kiali,Security_level=moderate,Environment={{ env }}"
              alb.ingress.kubernetes.io/healthcheck-path: /kiali
              alb.ingress.kubernetes.io/security-groups: "{{ security_group_id }}"
              alb.ingress.kubernetes.io/ssl-redirect: '443'
{% else %}
              nginx.ingress.kubernetes.io/ssl-redirect: 'true'
{% endif %}
          spec:
            rules:
            - host: "{{ server_host }}"
              http:
                paths:
                - path: "/"
                  pathType: Prefix
                  backend:
                    service:
                      name: kiali
                      port:
                        number: 20001
{% endif %}
    istio_namespace: istio-system
    external_services:
      istio:
        component_status:
          components:
          - app_label: istiod
            is_core: true
            is_proxy: false
            namespace: ""
          - app_label: istio-ingressgateway
            is_core: true
            is_proxy: true
            namespace: management
          - app_label: istio-egressgateway
            is_core: false
            is_proxy: true
            namespace: management
          enabled: true
      tracing:
        enabled: false
      grafana:
        auth:
          type: basic
          username: admin
          password: "{{ grafana_pass }}"
        url: "{{ grafana_url }}"
        in_cluster_url: "{{ grafana_url }}"
      prometheus:
        url: "{{ prometheus_url }}"
      custom_dashboards:
        namespace_label: "{{ namespace_label }}"