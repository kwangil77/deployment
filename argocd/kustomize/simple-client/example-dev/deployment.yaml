apiVersion: apps/v1
kind: Deployment
metadata:
  name: simple-client
  labels:
    app: simple-client
  annotations:
    keel.sh/policy: force
    keel.sh/match-tag: 'true'
    keel.sh/pollSchedule: '@every 1m'
    keel.sh/trigger: poll
spec:
  selector:
    matchLabels:
      app: simple-client
  template:
    metadata:
      labels:
        app: simple-client
      annotations:
        sidecar.opentelemetry.io/inject: 'true'
    spec:
      serviceAccountName: simple
      containers:
      - name: app
        image: ghcr.io/kwangil77/simple-client
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8080
        env:
        - name: APP_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['app']
        - name: APP_ENVIRONMENT
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['environment']
        - name: APP_SERVICE
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['service']
        - name: JAVA_TOOL_OPTIONS
          value: >
            -Xms4g -Xmx4g
            -Duser.timezone=Asia/Seoul
        - name: SPRING_PROFILES_ACTIVE
          value: $(APP_ENVIRONMENT)
        - name: MANAGEMENT_METRICS_TAGS_ENVIRONMENT
          value: $(APP_ENVIRONMENT)
        - name: MANAGEMENT_TRACING_ENABLED
          value: 'true'
        - name: REST_SIMPLEAPI_URL
          value: https://kong.example.io/simple-api
        - name: GRPC_CLIENT_SIMPLEAPI_ADDRESS
          value: static://kong.example.io:443
        - name: GRPC_CLIENT_SIMPLEAPI_NEGOTIATIONTYPE
          value: TLS
        - name: GRAPHQL_SIMPLEAPI_URL
          value: https://kong.example.io/simple-api/graphql
        # - name: REST_SIMPLEAPI_URL
        #   value: http://gateway-svc-tyk-gateway.management:8080/simple-api
        # - name: GRPC_CLIENT_SIMPLEAPI_ADDRESS
        #   value: static://gateway-svc-tyk-gateway.management:8080
        # - name: GRAPHQL_SIMPLEAPI_URL
        #   value: http://gateway-svc-tyk-gateway.management:8080/simple-api/graphql
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 8080
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8080
        resources:
          limits:
            cpu: 1000m
            memory: 4096Mi
          requests:
            cpu: 200m
            memory: 1024Mi
      nodeSelector:
        kubernetes.io/arch: amd64
        team: devops
        service: devops-service
        performance_type: standard
