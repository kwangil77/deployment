tempo-distributed:
  fullnameOverride: tempo
  reportingEnabled: false
  multitenancyEnabled: true
  gateway:
    nginxConfig:
      httpSnippet: |
        map $http_x_scope_orgid $ensured_x_scope_orgid {
          default $http_x_scope_orgid;
          "" "example";
        }
  ingester:
    replicas: 1
    extraArgs:
    - -config.expand-env=true
    extraEnvFrom:
    - secretRef:
        name: tempo-env
    config:
      replication_factor: 1
  metricsGenerator:
    config:
      processor:
        service_graphs:
          dimensions:
          - environment
          span_multiplier_key: "X-SampleRatio"
        span_metrics:
          dimensions:
          - environment
          span_multiplier_key: "X-SampleRatio"
      storage:
        remote_write:
        - url: "http://mimir-distributor.observability:8080/api/v1/push"
          # headers:
          #   X-Scope-OrgID: service
          send_exemplars: true
  compactor:
    extraArgs:
    - -config.expand-env=true
    extraEnvFrom:
    - secretRef:
        name: tempo-env
    config:
      compaction:
        block_retention: 24h
  querier:
    extraArgs:
    - -config.expand-env=true
    extraEnvFrom:
    - secretRef:
        name: tempo-env
  queryFrontend:
    extraArgs:
    - -config.expand-env=true
    extraEnvFrom:
    - secretRef:
        name: tempo-env
  storage:
    trace:
      backend: s3
      s3:
        bucket: example-local-tempo-bucket
        endpoint: minio-hl.management:9000
        access_key: ${MINIO_ACCESS_KEY}
        secret_key: ${MINIO_SECRET_KEY}
        insecure: true
        # endpoint: "s3.amazonaws.com"
        # region: ap-northeast-2