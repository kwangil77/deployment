tempo-distributed:
  global:
    image:
      registry: docker.io
  gateway:
    enabled: true
    nodeSelector:
      team: devops
      service: devops-infra
      performance_type: memory
    tolerations:
    - key: performance_type
      operator: Equal
      value: mem
      effect: NoSchedule
    nginxConfig:
      file: |
        worker_processes  5;
        error_log  /dev/stderr;
        pid        /tmp/nginx.pid;
        worker_rlimit_nofile 8192;
        events {
          worker_connections  4096;
        }
        http {
          client_body_temp_path /tmp/client_temp;
          proxy_temp_path       /tmp/proxy_temp_path;
          fastcgi_temp_path     /tmp/fastcgi_temp;
          uwsgi_temp_path       /tmp/uwsgi_temp;
          scgi_temp_path        /tmp/scgi_temp;
          proxy_http_version    1.1;
          default_type application/octet-stream;
          log_format   {{ .Values.gateway.nginxConfig.logFormat }}
          access_log   /dev/stderr  main;
          sendfile     on;
          tcp_nopush   on;
          resolver {{ .Values.global.dnsService }}.{{ .Values.global.dnsNamespace }}.svc.{{ .Values.global.clusterDomain }};
          server {
            listen             8080;
            location = / {
              return 200 'OK';
              auth_basic off;
            }
            location = /ready {
              return 200 'OK';
              auth_basic off;
            }
            location = /jaeger/api/traces {
              proxy_pass       http://{{ include "tempo.resourceName" (dict "ctx" . "component" "distributor") }}.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:14268/api/traces;
            }
            location = /zipkin/spans {
              proxy_pass       http://{{ include "tempo.resourceName" (dict "ctx" . "component" "distributor") }}.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:9411/spans;
            }
            location = /otlp/v1/traces {
              proxy_pass       http://{{ include "tempo.resourceName" (dict "ctx" . "component" "distributor") }}.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:4318/v1/traces;
            }
            location ^~ /api {
              proxy_pass       http://{{ include "tempo.resourceName" (dict "ctx" . "component" "query-frontend") }}.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:3100$request_uri;
            }
            location = /flush {
              proxy_pass       http://{{ include "tempo.resourceName" (dict "ctx" . "component" "ingester") }}.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:3100$request_uri;
            }
            location = /shutdown {
              proxy_pass       http://{{ include "tempo.resourceName" (dict "ctx" . "component" "ingester") }}.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:3100$request_uri;
            }
            location = /distributor/ring {
              proxy_pass       http://{{ include "tempo.resourceName" (dict "ctx" . "component" "distributor") }}.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:3100$request_uri;
            }
            location = /ingester/ring {
              proxy_pass       http://{{ include "tempo.resourceName" (dict "ctx" . "component" "distributor") }}.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:3100$request_uri;
            }
            location = /compactor/ring {
              proxy_pass       http://{{ include "tempo.resourceName" (dict "ctx" . "component" "compactor") }}.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}:3100$request_uri;
            }
          }
        }
  ingester:
    nodeSelector:
      team: devops
      service: devops-infra
      performance_type: memory
    tolerations:
    - key: performance_type
      operator: Equal
      value: mem
      effect: NoSchedule
    persistence:
      enabled: true
  metricsGenerator:
    enabled: true
    nodeSelector:
      team: devops
      service: devops-infra
      performance_type: memory
    tolerations:
    - key: performance_type
      operator: Equal
      value: mem
      effect: NoSchedule
  distributor:
    nodeSelector:
      team: devops
      service: devops-infra
      performance_type: memory
    tolerations:
    - key: performance_type
      operator: Equal
      value: mem
      effect: NoSchedule
  compactor:
    nodeSelector:
      team: devops
      service: devops-infra
      performance_type: memory
    tolerations:
    - key: performance_type
      operator: Equal
      value: mem
      effect: NoSchedule
  querier:
    nodeSelector:
      team: devops
      service: devops-infra
      performance_type: memory
    tolerations:
    - key: performance_type
      operator: Equal
      value: mem
      effect: NoSchedule
  queryFrontend:
    nodeSelector:
      team: devops
      service: devops-infra
      performance_type: memory
    tolerations:
    - key: performance_type
      operator: Equal
      value: mem
      effect: NoSchedule
  traces:
    jaeger:
      grpc:
        enabled: true
      thriftBinary:
        enabled: true
      thriftCompact:
        enabled: true
      thriftHttp:
        enabled: true
    zipkin:
      enabled: true
    otlp:
      http:
        enabled: true
      grpc:
        enabled: true
  reportingEnabled: false
  config: |
    multitenancy_enabled: {{ .Values.multitenancyEnabled }}
    stream_over_http_enabled: true
    usage_report:
      reporting_enabled: {{ .Values.reportingEnabled }}
    compactor:
      compaction:
        block_retention: {{ .Values.compactor.config.compaction.block_retention }}
        compacted_block_retention: {{ .Values.compactor.config.compaction.compacted_block_retention }}
        compaction_window: {{ .Values.compactor.config.compaction.compaction_window }}
        v2_in_buffer_bytes: {{ .Values.compactor.config.compaction.v2_in_buffer_bytes }}
        v2_out_buffer_bytes: {{ .Values.compactor.config.compaction.v2_out_buffer_bytes }}
        max_compaction_objects: {{ .Values.compactor.config.compaction.max_compaction_objects }}
        max_block_bytes: {{ .Values.compactor.config.compaction.max_block_bytes }}
        retention_concurrency: {{ .Values.compactor.config.compaction.retention_concurrency }}
        v2_prefetch_traces_count: {{ .Values.compactor.config.compaction.v2_prefetch_traces_count }}
        max_time_per_tenant: {{ .Values.compactor.config.compaction.max_time_per_tenant }}
        compaction_cycle: {{ .Values.compactor.config.compaction.compaction_cycle }}
      ring:
        kvstore:
          store: memberlist
    {{- if .Values.metricsGenerator.enabled }}
    metrics_generator:
      ring:
        kvstore:
          store: memberlist
      processor:
        {{- toYaml .Values.metricsGenerator.config.processor | nindent 6 }}
      storage:
        {{- toYaml .Values.metricsGenerator.config.storage | nindent 6 }}
      registry:
        {{- toYaml .Values.metricsGenerator.config.registry | nindent 6 }}
      metrics_ingestion_time_range_slack: {{ .Values.metricsGenerator.config.metrics_ingestion_time_range_slack }}
    {{- end }}
    distributor:
      ring:
        kvstore:
          store: memberlist
      receivers:
        {{- if  or (.Values.traces.jaeger.thriftCompact.enabled) (.Values.traces.jaeger.thriftBinary.enabled) (.Values.traces.jaeger.thriftHttp.enabled) (.Values.traces.jaeger.grpc.enabled) }}
        jaeger:
          protocols:
            {{- if .Values.traces.jaeger.thriftCompact.enabled }}
            thrift_compact:
              {{- $mergedJaegerThriftCompactConfig := mustMergeOverwrite (dict "endpoint" "0.0.0.0:6831") .Values.traces.jaeger.thriftCompact.receiverConfig }}
              {{- toYaml $mergedJaegerThriftCompactConfig | nindent 10 }}
            {{- end }}
            {{- if .Values.traces.jaeger.thriftBinary.enabled }}
            thrift_binary:
              {{- $mergedJaegerThriftBinaryConfig := mustMergeOverwrite (dict "endpoint" "0.0.0.0:6832") .Values.traces.jaeger.thriftBinary.receiverConfig }}
              {{- toYaml $mergedJaegerThriftBinaryConfig | nindent 10 }}
            {{- end }}
            {{- if .Values.traces.jaeger.thriftHttp.enabled }}
            thrift_http:
              {{- $mergedJaegerThriftHttpConfig := mustMergeOverwrite (dict "endpoint" "0.0.0.0:14268") .Values.traces.jaeger.thriftHttp.receiverConfig }}
              {{- toYaml $mergedJaegerThriftHttpConfig | nindent 10 }}
            {{- end }}
            {{- if .Values.traces.jaeger.grpc.enabled }}
            grpc:
              {{- $mergedJaegerGrpcConfig := mustMergeOverwrite (dict "endpoint" "0.0.0.0:14250") .Values.traces.jaeger.grpc.receiverConfig }}
              {{- toYaml $mergedJaegerGrpcConfig | nindent 10 }}
            {{- end }}
        {{- end }}
        {{- if .Values.traces.zipkin.enabled }}
        zipkin:
          {{- $mergedZipkinReceiverConfig := mustMergeOverwrite (dict "endpoint" "0.0.0.0:9411") .Values.traces.zipkin.receiverConfig }}
          {{- toYaml $mergedZipkinReceiverConfig | nindent 6 }}
        {{- end }}
        {{- if or (.Values.traces.otlp.http.enabled) (.Values.traces.otlp.grpc.enabled) }}
        otlp:
          protocols:
            {{- if .Values.traces.otlp.http.enabled }}
            http:
              {{- $mergedOtlpHttpReceiverConfig := mustMergeOverwrite (dict "endpoint" "0.0.0.0:4318") .Values.traces.otlp.http.receiverConfig }}
              {{- toYaml $mergedOtlpHttpReceiverConfig | nindent 10 }}
            {{- end }}
            {{- if .Values.traces.otlp.grpc.enabled }}
            grpc:
              {{- $mergedOtlpGrpcReceiverConfig := mustMergeOverwrite (dict "endpoint" "0.0.0.0:4317") .Values.traces.otlp.grpc.receiverConfig }}
              {{- toYaml $mergedOtlpGrpcReceiverConfig | nindent 10 }}
            {{- end }}
        {{- end }}
        {{- if .Values.traces.opencensus.enabled }}
        opencensus:
          {{- $mergedOpencensusReceiverConfig := mustMergeOverwrite (dict "endpoint" "0.0.0.0:55678") .Values.traces.opencensus.receiverConfig }}
          {{- toYaml $mergedOpencensusReceiverConfig | nindent 6 }}
        {{- end }}
        {{- if .Values.traces.kafka }}
        kafka:
          {{- toYaml .Values.traces.kafka | nindent 6 }}
        {{- end }}
      {{- if or .Values.distributor.config.log_received_traces .Values.distributor.config.log_received_spans.enabled }}
      log_received_spans:
        enabled: {{ or .Values.distributor.config.log_received_traces .Values.distributor.config.log_received_spans.enabled }}
        include_all_attributes: {{ .Values.distributor.config.log_received_spans.include_all_attributes }}
        filter_by_status_error: {{ .Values.distributor.config.log_received_spans.filter_by_status_error }}
      {{- end }}
      {{- if .Values.distributor.config.extend_writes }}
      extend_writes: {{ .Values.distributor.config.extend_writes }}
      {{- end }}
    querier:
      frontend_worker:
        frontend_address: {{ include "tempo.resourceName" (dict "ctx" . "component" "query-frontend") }}:9095
        {{- if .Values.querier.config.frontend_worker.grpc_client_config }}
        grpc_client_config:
          {{- toYaml .Values.querier.config.frontend_worker.grpc_client_config | nindent 6 }}
        {{- end }}
      trace_by_id:
        query_timeout: {{ .Values.querier.config.trace_by_id.query_timeout }}
      search:
        external_endpoints: {{- toYaml .Values.querier.config.search.external_endpoints | nindent 6 }}
        query_timeout: {{ .Values.querier.config.search.query_timeout }}
        prefer_self: {{ .Values.querier.config.search.prefer_self }}
        external_hedge_requests_at: {{ .Values.querier.config.search.external_hedge_requests_at }}
        external_hedge_requests_up_to: {{ .Values.querier.config.search.external_hedge_requests_up_to }}
        external_backend: {{ .Values.querier.config.search.external_backend }}
        {{- if .Values.querier.config.search.google_cloud_run }}
        google_cloud_run:
          {{- toYaml .Values.querier.config.search.google_cloud_run | nindent 6 }}
        {{- end }}
      max_concurrent_queries: {{ .Values.querier.config.max_concurrent_queries }}
    query_frontend:
      max_retries: {{ .Values.queryFrontend.config.max_retries }}
      search:
        target_bytes_per_job: {{ .Values.queryFrontend.config.search.target_bytes_per_job }}
        concurrent_jobs: {{ .Values.queryFrontend.config.search.concurrent_jobs }}
      trace_by_id:
        query_shards: {{ .Values.queryFrontend.config.trace_by_id.query_shards }}
        hedge_requests_at: {{ .Values.queryFrontend.config.trace_by_id.hedge_requests_at }}
        hedge_requests_up_to: {{ .Values.queryFrontend.config.trace_by_id.hedge_requests_up_to }}
    ingester:
      lifecycler:
        ring:
          replication_factor: {{ .Values.ingester.config.replication_factor }}
          kvstore:
            store: memberlist
        tokens_file_path: /var/tempo/tokens.json
      {{- if .Values.ingester.config.trace_idle_period }}
      trace_idle_period: {{ .Values.ingester.config.trace_idle_period }}
      {{- end }}
      {{- if .Values.ingester.config.flush_check_period }}
      flush_check_period: {{ .Values.ingester.config.flush_check_period }}
      {{- end }}
      {{- if .Values.ingester.config.max_block_bytes }}
      max_block_bytes: {{ .Values.ingester.config.max_block_bytes }}
      {{- end }}
      {{- if .Values.ingester.config.max_block_duration }}
      max_block_duration: {{ .Values.ingester.config.max_block_duration }}
      {{- end }}
      {{- if .Values.ingester.config.complete_block_timeout }}
      complete_block_timeout: {{ .Values.ingester.config.complete_block_timeout }}
      {{- end }}
    memberlist:
      {{- with .Values.memberlist }}
        {{- toYaml . | nindent 2 }}
      {{- end }}
      join_members:
        - dns+{{ include "tempo.fullname" . }}-gossip-ring:{{ .Values.memberlist.bind_port }}
    overrides:
      {{- toYaml .Values.global_overrides | nindent 2 }}
      {{- if .Values.metricsGenerator.enabled }}
      metrics_generator_processors:
      {{- range .Values.global_overrides.metrics_generator_processors }}
      - {{ . }}
      {{- end }}
      {{- end }}
    server:
      http_listen_port: {{ .Values.server.httpListenPort }}
      log_level: {{ .Values.server.logLevel }}
      log_format: {{ .Values.server.logFormat }}
      grpc_server_max_recv_msg_size: {{ .Values.server.grpc_server_max_recv_msg_size }}
      grpc_server_max_send_msg_size: {{ .Values.server.grpc_server_max_send_msg_size }}
      http_server_read_timeout: {{ .Values.server.http_server_read_timeout }}
      http_server_write_timeout: {{ .Values.server.http_server_write_timeout }}
    storage:
      trace:
        {{- if .Values.storage.trace.block.version }}
        block:
          version: {{.Values.storage.trace.block.version}}
        {{- end }}
        backend: {{.Values.storage.trace.backend}}
        {{- if eq .Values.storage.trace.backend "gcs"}}
        gcs:
          {{- toYaml .Values.storage.trace.gcs | nindent 6}}
        {{- end}}
        {{- if eq .Values.storage.trace.backend "s3"}}
        s3:
          {{- toYaml .Values.storage.trace.s3 | nindent 6}}
        {{- end}}
        {{- if eq .Values.storage.trace.backend "azure"}}
        azure:
          {{- toYaml .Values.storage.trace.azure | nindent 6}}
        {{- end}}
        blocklist_poll: 5m
        local:
          path: /var/tempo/traces
        wal:
          path: /var/tempo/wal
        {{- if .Values.memcached.enabled }}
        cache: memcached
        memcached:
          consistent_hash: true
          host: {{ include "tempo.fullname" . }}-memcached
          service: memcached-client
          timeout: 500ms
        {{- end }}
  global_overrides:
    metrics_generator_processors:
    - service-graphs
    - span-metrics
  memcached:
    image:
      repository: library/memcached
    nodeSelector:
      team: devops
      service: devops-infra
      performance_type: memory
    tolerations:
    - key: performance_type
      operator: Equal
      value: mem
      effect: NoSchedule
  memcachedExporter:
    enabled: true
  metaMonitoring:
    serviceMonitor:
      enabled: true
  minio:
    enabled: false