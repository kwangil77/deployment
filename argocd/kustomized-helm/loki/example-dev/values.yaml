loki-distributed:
  fullnameOverride: loki
  gateway:
    replicas: 2
    maxUnavailable: 1
  loki:
    config: |
      auth_enabled: false
      server:
        {{- toYaml .Values.loki.server | nindent 6 }}
      common:
        compactor_address: http://{{ include "loki.compactorFullname" . }}:3100
      distributor:
        ring:
          kvstore:
            store: memberlist
      memberlist:
        join_members:
          - {{ include "loki.fullname" . }}-memberlist
      ingester:
        lifecycler:
          ring:
            kvstore:
              store: memberlist
            replication_factor: 1
        chunk_idle_period: 15m
        chunk_block_size: 262144
        chunk_encoding: snappy
        chunk_retain_period: 1m
        max_transfer_retries: 0
        wal:
          dir: /var/loki/wal
      limits_config:
        enforce_metric_name: false
        reject_old_samples: true
        reject_old_samples_max_age: 168h
        max_cache_freshness_per_query: 10m
        split_queries_by_interval: 15m
        max_streams_per_user: 0
        ingestion_burst_size_mb: 20
        ingestion_rate_mb: 10
        cardinality_limit: 1000000
        retention_period: 48h
      {{- if .Values.loki.schemaConfig }}
      schema_config:
      {{- toYaml .Values.loki.schemaConfig | nindent 2 }}
      {{- end }}
      {{- if .Values.loki.storageConfig }}
      storage_config:
      {{- if .Values.indexGateway.enabled }}
      {{- $indexGatewayClient := dict "server_address" (printf "dns:///%s:9095" (include "loki.indexGatewayFullname" .)) }}
      {{- $_ := set .Values.loki.storageConfig.tsdb_shipper "index_gateway_client" $indexGatewayClient }}
      {{- end }}
      {{- toYaml .Values.loki.storageConfig | nindent 2 }}
      {{- if .Values.memcachedIndexQueries.enabled }}
        index_queries_cache_config:
          memcached_client:
            addresses: dnssrv+_memcached-client._tcp.{{ include "loki.memcachedIndexQueriesFullname" . }}.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}
            consistent_hash: true
      {{- end }}
      {{- end }}
      runtime_config:
        file: /var/{{ include "loki.name" . }}-runtime/runtime.yaml
      chunk_store_config:
        max_look_back_period: 0s
        {{- if .Values.memcachedChunks.enabled }}
        chunk_cache_config:
          embedded_cache:
            enabled: false
          memcached_client:
            consistent_hash: true
            addresses: dnssrv+_memcached-client._tcp.{{ include "loki.memcachedChunksFullname" . }}.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}
        {{- end }}
        {{- if .Values.memcachedIndexWrites.enabled }}
        write_dedupe_cache_config:
          memcached_client:
            consistent_hash: true
            addresses: dnssrv+_memcached-client._tcp.{{ include "loki.memcachedIndexWritesFullname" . }}.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}
        {{- end }}
      table_manager:
        retention_deletes_enabled: false
        retention_period: 0s
      query_range:
        align_queries_with_step: true
        max_retries: 5
        cache_results: true
        results_cache:
          cache:
            {{- if .Values.memcachedFrontend.enabled }}
            memcached_client:
              addresses: dnssrv+_memcached-client._tcp.{{ include "loki.memcachedFrontendFullname" . }}.{{ .Release.Namespace }}.svc.{{ .Values.global.clusterDomain }}
              consistent_hash: true
            {{- else }}
            embedded_cache:
              enabled: true
              ttl: 24h
            {{- end }}
      frontend_worker:
        {{- if .Values.queryScheduler.enabled }}
        scheduler_address: {{ include "loki.querySchedulerFullname" . }}:9095
        {{- else }}
        frontend_address: {{ include "loki.queryFrontendFullname" . }}-headless:9095
        {{- end }}
      frontend:
        log_queries_longer_than: 5s
        compress_responses: true
        {{- if .Values.queryScheduler.enabled }}
        scheduler_address: {{ include "loki.querySchedulerFullname" . }}:9095
        {{- end }}
        tail_proxy_url: http://{{ include "loki.querierFullname" . }}:3100
      compactor:
        shared_store: s3
        retention_enabled: true
      ruler:
        enable_api: true
        storage:
          type: s3
          s3:
            bucketnames: example-dev-loki-ruler-bucket
            s3forcepathstyle: true
            endpoint: minio-hl.management:9000
            access_key_id: <path:kv/data/minio/secret#access-key>
            secret_access_key: <path:kv/data/minio/secret#secret-key>
            insecure: true
            # s3: "s3://ap-northeast-2/example-dev-loki-ruler-bucket"
        ring:
          kvstore:
            store: memberlist
        rule_path: /tmp/loki
        alertmanager_url: http://alertmanager.observability:9093
        external_url: https://alertmanager.example.io
    schemaConfig:
      configs:
      - from: "2020-09-07"
        store: tsdb
        object_store: s3
        schema: v11
        index:
          prefix: loki_index_
          period: 24h
    storageConfig:
      aws:
        bucketnames: example-dev-loki-bucket
        s3forcepathstyle: true
        endpoint: minio-hl.management:9000
        access_key_id: <path:kv/data/minio/secret#access-key>
        secret_access_key: <path:kv/data/minio/secret#secret-key>
        insecure: true
        # endpoint: "s3.amazonaws.com"
        # region: ap-northeast-2
      tsdb_shipper:
        active_index_directory: /var/loki/index
        cache_location: /var/loki/cache
        cache_ttl: 168h
        shared_store: s3
  distributor:
    replicas: 3
    maxUnavailable: 1
  ingester:
    replicas: 4
    maxUnavailable: 1
  querier:
    replicas: 2
    maxUnavailable: 1
  queryScheduler:
    replicas: 2
